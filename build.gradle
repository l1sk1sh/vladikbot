buildscript {
    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'com.avast.gradle.docker-compose' version '0.13.0'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://m2.chew.pro/releases" }
    maven { url "https://m2.chew.pro/snapshots" }
    maven { url 'https://m2.dv8tion.net/releases' }
    maven { url 'https://maven.lavalink.dev/releases' }
    maven { url 'https://maven.topi.wtf/releases' }
}

group '—Åom.l1sk1sh'
version '2.1.0.alpha'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

jar {
    //noinspection GroovyAssignabilityCheck
    manifest {
        attributes 'Main-Class': 'com.l1sk1sh.vladikbot.VladikBot'
    }
}

bootJar {
    launchScript()
}

dockerCompose {
    useComposeFiles = ['.docker/docker-compose.yml']
    projectName = 'vladik'
    projectNamePrefix = 'bot_'
    buildBeforeUp = true
    forceRecreate = true
}

tasks.composeUp {
    //noinspection GrUnresolvedAccess
    dependsOn bootJar
}

dependencies {
    implementation 'net.dv8tion:JDA:5.2.1'
    implementation 'pw.chew:jda-chewtils:2.0'
    implementation 'com.github.ygimenez:Pagination-Utils:4.0.6'
    implementation 'dev.arbjerg:lavaplayer:2.2.2'
    implementation 'dev.lavalink.youtube:v2:1.11.3'
    implementation 'com.github.topi314.lavasrc:lavasrc:4.3.0'
    implementation 'com.github.topi314.lavasrc:lavasrc-protocol:4.3.0'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2:1.4.200' // Has to be updated along with Spring

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.zeroturnaround:zt-zip:1.14'

    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.13'
    implementation 'ch.qos.logback:logback-core:1.2.13'
    implementation 'org.fusesource.jansi:jansi:2.4.0'

    implementation 'com.opencsv:opencsv:5.9'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'com.github.w3stling:rssreader:v2.5.0'

    implementation 'org.ocpsoft.prettytime:prettytime-nlp:5.0.2.Final'

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.codehaus.janino:janino:3.1.6'

    implementation 'org.jetbrains:annotations:23.0.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

afterEvaluate {
    bootJar.finalizedBy(copyExecutableJar)
}

tasks.register('copyExecutableJar') {
    doLast {
        copy {
            from "$rootDir/build/libs"
            include "vladikbot-${version}.jar"
            into ".docker/bot"
            rename "(.+).jar", "vladik.jar"
        }
    }
}